####
#{application}、{profile}等springcloud相关的属性必须配置在bootstrap.properties中，config部分内容才能被正确加载。
#因为config相关的而配置会优先于application.properties，而bootstrap.properties的加载也是优先于application.properties

#配置中心的具体位置
spring.cloud.config.uri= ${SPRING_CLOUD_CONFIG_URI:http://localhost:8001/}

#对应{profile} 部分
spring.cloud.config.profile=${SPRING_CLOUD_CONFIG_PROFILE:dev}

#对应Git的分支。如果配置中心使用的是本地存储，则该参数无用
spring.cloud.config.label=${SPRING_CLOUD_CONFIG_LABEL:master}

spring.cloud.config.password=${SPRING_CLOUD_CONFIG_PASSWORD}

spring.cloud.config.name=${SPRING_CLOUD_CONFIG_NAME:spring-server-b}


#直接通过配置中心获取配置；当配置中心不可用时，可设置为true使用缓存在本地的配置文件启动应用
spring.cloud.config.localcache.load=true

#定义本地缓存文件生成的目录和名称
spring.cloud.config.localcache.path=./target/remoteConfigBackup.properties

server.port=6002
spring.application.name=spring-server-b

#指定配置中心的service-id,便于扩展为高可用配置集群
#spring.cloud.config.discovery.server-id=***

ribbon.ReadTimeout=60000
ribbon.ConnectTimeout=60000
#ribbon.MaxAutoRetries=0
#ribbon.MaxAutoRetriesNextServer=1 

#服务地址
springClientA=http://spring-client-a/spring-client-a/
springServerB=http://spring-server-a/spring-server-a/

